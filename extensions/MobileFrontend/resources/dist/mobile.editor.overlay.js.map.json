{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.editor.overlay/BlockMessageDetails.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/EditorGateway.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/EditorOverlayBase.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/SourceEditorOverlay.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/VisualEditorOverlay.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/blockMessageDrawer.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/identifyLeadParagraph.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/mobile.editor.overlay.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/parseBlockInfo.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/saveFailureMessage.js","webpack://mfModules.[name]/./src/mobile.editor.overlay/schemaEditAttemptStep.js"],"names":["Button","require","View","Icon","okButton","label","mw","msg","tagName","progressive","additionalClassNames","util","BlockMessageDetails","userIcon","name","hasText","this","options","creator","$el","find","prepend","createDetailsAnchorHref","getUrl","wpTarget","blockId","createDetailsAnchorLabel","createTitle","partial","reasonHeader","creatorHeader","user","get","expiryHeader","template","module","exports","actionParams","EditorGateway","api","title","sectionId","oldId","content","isNewPage","undefined","fromModified","hasChanged","prototype","getBlockInfo","pageObj","blockedError","actions","edit","Array","isArray","some","error","indexOf","code","data","blockinfo","getContent","self","resolve","Deferred","text","prop","rvprop","titles","intestactions","intestactionsdetail","rvstartid","isNumeric","rvsection","then","resp","revision","reject","query","pages","missing","revisions","timestamp","originalContent","setContent","setPrependText","prependtext","save","result","apiOptions","action","errorformat","errorlang","config","errorsuselocal","formatversion","summary","captchaid","captchaId","captchaword","captchaWord","basetimestamp","starttimestamp","section","postWithToken","newrevid","saveContent","abortPreview","_pending","abort","getPreview","sectionLine","extend","sectionpreview","disableeditsection","pst","mobileformat","post","parse","sections","anchor","line","id","promise","Overlay","parseBlockInfo","headers","PageGateway","icons","toast","saveFailureMessage","mfExtend","blockMessageDrawer","MessageBox","mwUser","EditVeTool","toolGroup","classes","super","call","EditorOverlayBase","params","onBeforeExit","bind","className","isBorderBox","events","click .back","click .continue","click .submit","click .anonymous","placeholder","summaryRequestMsg","pageGateway","editCount","isNewEditor","editorOptions","sessionId","overlayManager","OO","inheritClass","ui","Tool","static","icon","group","onSelect","onUpdateState","defaults","hasToolbar","continueMsg","closeMsg","summaryMsg","captchaMsg","captchaTryAgainMsg","switchMsg","confirmMsg","licenseMsg","log","track","editor_interface","editor","editing_session_id","logFeatureUse","confirmSave","window","confirm","onSaveComplete","newRevId","$window","getWindow","saved","invalidatePage","showOnPageReload","type","revision_id","location","hash","off","reload","onSaveFailure","key","errors","captcha","message","editconflict","wasdeleted","abusefilter-disallowed","spamprotectiontext","titleblacklist-forbidden-edit","reportError","errorNotice","heading","$errorNoticeContainer","html","hideErrorNotice","empty","onStageChanges","showHidden","scrollTo","onSaveBegin","confirmAborted","preRender","formHeader","render","editSwitcher","editingMsg","readOnly","disabled","skipPreview","saveButtonMessage","cancel","saveHeader","previewingMsg","savingHeader","postRender","nextStep","apply","show","allowCloseWindow","confirmCloseWindow","test","namespace","hook","fire","onClickBack","onClickSubmit","onClickContinue","onClickAnonymous","exit","windowManager","switching","getWindowManager","addWindows","widgets","AbandonEditDialog","openWindow","closed","mechanism","release","target","edited","createAnonWarning","$actions","$","addClass","$anonWarning","append","returnto","returnTo","returntoquery","warning","queryParams","signupParams","signupQueryParams","anonymousEditorActions","block","href","map","getOptionsForSwitch","switched","currentPageHTMLParser","fakeScroll","titleObj","isAnon","contentLang","contentDir","getLoadingPromise","dataPromise","loader","using","handleCaptcha","details","$input","captchaShown","val","attr","setTimeout","mime","detach","url","question","Section","fakeToolbar","VisualEditorOverlay","SourceEditorOverlay","isFirefox","navigator","userAgent","visualEditorConfig","gateway","isVisualEditorEnabled","input .wikitext-editor","templatePartials","arguments","_resizeEditor","ns","namespaces","onInputWikitextEditor","_hidePreview","showAnonWarning","switchToolbar","switchWindow","toolFactory","ToolFactory","toolGroupFactory","ToolGroupFactory","register","libs","ve","MWEditModeVisualTool","MWEditModeSourceTool","Toolbar","on","mode","canSwitch","fullRestbaseUrl","allowLossySwitching","_switchToVisualEditor","WindowManager","SwitchConfirmDialog","$element","appendTo","document","body","destroy","setup","include","emit","spinner","hideSpinner","$preview","$content","hide","$anonHiddenButtons","one","_loadContent","hideSpinnerAndShowPreview","scrollTop","getDocument","showSpinner","mainpage","parsedText","parsedSectionLine","parseHTML","el","removeClass","container","$scrollContainer","Element","getClosestScrollableContainer","length","css","height","wikitext","feature","storage","set","targetLoader","addPlugin","loadModules","newOverlay","requestPageData","targetName","modified","replaceCurrent","remove","router","identifyLeadParagraph","surfaceReady","origDataPromise","getPrefixedDb","sessionStore","init","MobileArticleTarget","trackingName","targetFactory","create","once","getSurface","getModel","load","visualeditor","editHeader","destroyTarget","redoTargetInit","adjustContentPadding","restoreEditSection","scrollToLeadParagraph","editLead","editLeadView","readLead","offset","surface","getMode","getView","$attachedRootNode","getLeadSectionElement","top","setLinearSelection","Range","getRange","start","overlay","switchToEditor","switchToSourceEditor","setReadOnly","navigateTo","path","useReplaceState","hasBeenModified","Drawer","props","children","$body","$paragraphs","i","node","isNonLeadParagraph","$coords","textContent","isNotEmptyNode","m","schemaEditAttemptStep","define","blockInfo","expiry","reason","moment","blockpartial","blockedby","Title","makeTitle","duration","blockid","blockexpiry","format","to","blockreason","parser","ast","jqueryMsg","wikiTextToAst","emitter","e","jqueryMsgParse","escape","escaped","readonlyreason","trackdebug","getParamValue","exists","Schema","eventLog","sampleRate","actionPrefixMap","firstChange","saveIntent","saveAttempt","saveSuccess","saveFailure","timing","page_id","page_title","page_ns","user_id","getId","user_class","user_editcount","mw_version","platform","integration","page_token","getPageviewToken","session_token","version","anonymous_user_token","bucket","trackSubscribe","topic","timeStamp","actionPrefix","Math","round","event","ready","warn","abort_type","computeDuration","is_oversample","inSample","console"],"mappings":"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","file":"mobile.editor.overlay.js","sourcesContent":["'use strict';\nvar Button = require( '../mobile.startup/Button' ),\n\tView = require( '../mobile.startup/View' ),\n\tIcon = require( '../mobile.startup/Icon' ),\n\tokButton = new Button( {\n\t\tlabel: mw.msg( 'ok' ),\n\t\ttagName: 'button',\n\t\tprogressive: true,\n\t\tadditionalClassNames: 'cancel'\n\t} ),\n\tutil = require( '../mobile.startup/util' );\n\n/**\n * @extends View\n */\nclass BlockMessageDetails extends View {\n\t/** @inheritdoc */\n\tget isTemplateMode() {\n\t\treturn true;\n\t}\n\t/**\n\t * @inheritdoc\n\t */\n\tget defaults() {\n\t\treturn {\n\t\t\tcreateDetailsAnchorHref: function () {\n\t\t\t\treturn mw.util.getUrl( 'Special:BlockList', { wpTarget: '#' + this.blockId } );\n\t\t\t},\n\t\t\tcreateDetailsAnchorLabel: function () {\n\t\t\t\treturn mw.msg( 'mobile-frontend-editor-blocked-drawer-help' );\n\t\t\t},\n\t\t\tcreateTitle: function () {\n\t\t\t\treturn this.partial ? mw.msg( 'mobile-frontend-editor-blocked-drawer-title-partial' ) : mw.msg( 'mobile-frontend-editor-blocked-drawer-title' );\n\t\t\t},\n\t\t\treasonHeader: mw.msg( 'mobile-frontend-editor-blocked-drawer-reason-header' ),\n\t\t\tcreatorHeader: function () {\n\t\t\t\t// The gender is the subject (the blockee) not the object (the blocker).\n\t\t\t\treturn mw.msg( 'mobile-frontend-editor-blocked-drawer-creator-header',\n\t\t\t\t\tmw.user.options.get( 'gender' ) );\n\t\t\t},\n\t\t\texpiryHeader: mw.msg( 'mobile-frontend-editor-blocked-drawer-expiry-header' )\n\t\t};\n\t}\n\t/**\n\t * @inheritdoc\n\t */\n\tpostRender() {\n\t\tconst userIcon = new Icon( {\n\t\t\ttagName: 'span',\n\t\t\tname: 'profile',\n\t\t\thasText: true,\n\t\t\tlabel: this.options.creator.name\n\t\t} );\n\n\t\tthis.$el.find( '.block-message-creator a' ).prepend(\n\t\t\tuserIcon.$el\n\t\t);\n\t\tthis.$el.find( '.block-message-buttons' ).prepend(\n\t\t\tokButton.$el\n\t\t);\n\t\tthis.$el.find( '.block-message-icon' ).prepend(\n\t\t\t( new Icon( {\n\t\t\t\tname: 'stop-hand',\n\t\t\t\tadditionalClassNames: 'mw-ui-icon-flush-top'\n\t\t\t} ) ).$el\n\t\t);\n\t}\n\t/**\n\t * @inheritdoc\n\t */\n\tget template() {\n\t\treturn util.template( `\n<div class=\"block-message\">\n  <div class=\"block-message-icon\"></div>\n  <div class=\"block-message-info\">\n    <div class=\"block-message-item block-message-title\">\n      <h5>{{ createTitle }}</h5>\n    </div>\n    <div class=\"block-message-data\">\n      {{#reason}}\n        <div class=\"block-message-item\">\n          <h6>{{ reasonHeader }}</h6>\n          <div><strong>{{{ reason }}}</strong></div>\n        </div>\n      {{/reason}}\n      <div class=\"block-message-item block-message-creator\">\n        <h6>{{ creatorHeader }}</h6>\n        <div><strong><a href=\"{{ creator.url }}\"></a></strong></div>\n      </div>\n      {{#expiry}}\n        <div class=\"block-message-item\">\n          <h6>{{ expiryHeader }}</h6>\n          <div><strong>{{#duration}}{{ duration }} / {{/duration}}{{ expiry }}</strong></div>\n        </div>\n      {{/expiry}}\n    </div>\n    <div class=\"block-message-item block-message-buttons\">\n      <a href=\"{{ createDetailsAnchorHref }}\">{{ createDetailsAnchorLabel }}</a>\n    </div>\n  </div>` );\n\t}\n}\n\nmodule.exports = BlockMessageDetails;\n","var util = require( '../mobile.startup/util' ),\n\tactionParams = require( '../mobile.startup/actionParams' );\n\n/**\n * API that helps save and retrieve page content\n * @class EditorGateway\n *\n * @param {Object} options Configuration options\n * @param {mw.Api} options.api an Api to use.\n * @param {string} options.title the title to edit\n * @param {number} options.sectionId the id of the section to operate edits on.\n * @param {number} [options.oldId] revision to operate on. If absent defaults to latest.\n * @param {boolean} [options.isNewPage] whether the page being created is new\n * @param {boolean} [options.fromModified] whether the page was loaded in a modified state\n */\nfunction EditorGateway( options ) {\n\tthis.api = options.api;\n\tthis.title = options.title;\n\tthis.sectionId = options.sectionId;\n\tthis.oldId = options.oldId;\n\t// return an empty section for new pages\n\tthis.content = options.isNewPage ? '' : undefined;\n\tthis.fromModified = options.fromModified;\n\tthis.hasChanged = options.fromModified;\n}\n\nEditorGateway.prototype = {\n\n\t/**\n\t * Get the block (if there is one) from the result.\n\t * @memberof EditorGateway\n\t * @param {Object} pageObj Page object\n\t * @return {Object|null}\n\t */\n\tgetBlockInfo: function ( pageObj ) {\n\t\tvar blockedError;\n\n\t\tif ( pageObj.actions &&\n\t\t\tpageObj.actions.edit &&\n\t\t\tArray.isArray( pageObj.actions.edit )\n\t\t) {\n\t\t\tpageObj.actions.edit.some( function ( error ) {\n\t\t\t\tif ( [ 'blocked', 'autoblocked' ].indexOf( error.code ) !== -1 ) {\n\t\t\t\t\tblockedError = error;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t} );\n\n\t\t\tif ( blockedError && blockedError.data && blockedError.data.blockinfo ) {\n\t\t\t\treturn blockedError.data.blockinfo;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\t/**\n\t * Get the content of a page.\n\t * @memberof EditorGateway\n\t * @instance\n\t * @return {jQuery.Promise}\n\t */\n\tgetContent: function () {\n\t\tvar options,\n\t\t\tself = this;\n\n\t\tfunction resolve() {\n\t\t\treturn util.Deferred().resolve( {\n\t\t\t\ttext: self.content || '',\n\t\t\t\tblockinfo: self.blockinfo\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.content !== undefined ) {\n\t\t\treturn resolve();\n\t\t} else {\n\t\t\toptions = actionParams( {\n\t\t\t\tprop: [ 'revisions', 'info' ],\n\t\t\t\trvprop: [ 'content', 'timestamp' ],\n\t\t\t\ttitles: self.title,\n\t\t\t\t// get block information for this user\n\t\t\t\tintestactions: 'edit',\n\t\t\t\tintestactionsdetail: 'full'\n\t\t\t} );\n\t\t\t// Load text of old revision if desired\n\t\t\tif ( this.oldId ) {\n\t\t\t\toptions.rvstartid = this.oldId;\n\t\t\t}\n\t\t\t// See Bug 50136 - passing rvsection will fail with non wikitext\n\t\t\tif ( util.isNumeric( this.sectionId ) ) {\n\t\t\t\toptions.rvsection = this.sectionId;\n\t\t\t}\n\t\t\treturn this.api.get( options ).then( function ( resp ) {\n\t\t\t\tvar revision, pageObj;\n\n\t\t\t\tif ( resp.error ) {\n\t\t\t\t\treturn util.Deferred().reject( resp.error.code );\n\t\t\t\t}\n\n\t\t\t\tpageObj = resp.query.pages[0];\n\t\t\t\t// page might not exist and caller might not have known.\n\t\t\t\tif ( pageObj.missing !== undefined ) {\n\t\t\t\t\tself.content = '';\n\t\t\t\t} else {\n\t\t\t\t\trevision = pageObj.revisions[0];\n\t\t\t\t\tself.content = revision.content;\n\t\t\t\t\tself.timestamp = revision.timestamp;\n\t\t\t\t}\n\n\t\t\t\t// save content a second time to be able to check for changes\n\t\t\t\tself.originalContent = self.content;\n\t\t\t\tself.blockinfo = self.getBlockInfo( pageObj );\n\n\t\t\t\treturn resolve();\n\t\t\t} );\n\t\t}\n\t},\n\n\t/**\n\t * Mark content as modified and set changes to be submitted when #save\n\t * is invoked.\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {string} content New section content.\n\t */\n\tsetContent: function ( content ) {\n\t\tif ( this.originalContent !== content || this.fromModified ) {\n\t\t\tthis.hasChanged = true;\n\t\t} else {\n\t\t\tthis.hasChanged = false;\n\t\t}\n\t\tthis.content = content;\n\t},\n\n\t/**\n\t * Mark content as modified and set text that should be prepended to given\n\t * section when #save is invoked.\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {string} text Text to be prepended.\n\t */\n\tsetPrependText: function ( text ) {\n\t\tthis.prependtext = text;\n\t\tthis.hasChanged = true;\n\t},\n\n\t/**\n\t * Save the new content of the section, previously set using #setContent.\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {Object} options Configuration options\n\t * @param {string} [options.summary] Optional summary for the edit.\n\t * @param {string} [options.captchaId] If CAPTCHA was requested, ID of the\n\t * captcha.\n\t * @param {string} [options.captchaWord] If CAPTCHA was requested, term\n\t * displayed in the CAPTCHA.\n\t * @return {jQuery.Deferred} On failure callback is passed an object with\n\t * `type` and `details` properties. `type` is a string describing the type\n\t * of error, `details` can be any object (usually error message).\n\t */\n\tsave: function ( options ) {\n\t\tvar self = this,\n\t\t\tresult = util.Deferred();\n\n\t\toptions = options || {};\n\n\t\t/**\n\t\t * Save content. Make an API request.\n\t\t * @return {jQuery.Deferred}\n\t\t */\n\t\tfunction saveContent() {\n\t\t\tvar apiOptions = {\n\t\t\t\taction: 'edit',\n\t\t\t\terrorformat: 'html',\n\t\t\t\terrorlang: mw.config.get( 'wgUserLanguage' ),\n\t\t\t\terrorsuselocal: 1,\n\t\t\t\tformatversion: 2,\n\t\t\t\ttitle: self.title,\n\t\t\t\tsummary: options.summary,\n\t\t\t\tcaptchaid: options.captchaId,\n\t\t\t\tcaptchaword: options.captchaWord,\n\t\t\t\tbasetimestamp: self.timestamp,\n\t\t\t\tstarttimestamp: self.timestamp\n\t\t\t};\n\n\t\t\tif ( self.content !== undefined ) {\n\t\t\t\tapiOptions.text = self.content;\n\t\t\t} else if ( self.prependtext ) {\n\t\t\t\tapiOptions.prependtext = self.prependtext;\n\t\t\t}\n\n\t\t\tif ( util.isNumeric( self.sectionId ) ) {\n\t\t\t\tapiOptions.section = self.sectionId;\n\t\t\t}\n\n\t\t\tself.api.postWithToken( 'csrf', apiOptions ).then( function ( data ) {\n\t\t\t\tif ( data && data.edit && data.edit.result === 'Success' ) {\n\t\t\t\t\tself.hasChanged = false;\n\t\t\t\t\tresult.resolve( data.edit.newrevid );\n\t\t\t\t} else {\n\t\t\t\t\tresult.reject( data );\n\t\t\t\t}\n\t\t\t}, function ( code, data ) {\n\t\t\t\tresult.reject( data );\n\t\t\t} );\n\t\t\treturn result;\n\t\t}\n\n\t\treturn saveContent();\n\t},\n\n\t/**\n\t * Abort any pending previews.\n\t * @memberof EditorGateway\n\t * @instance\n\t */\n\tabortPreview: function () {\n\t\tif ( this._pending ) {\n\t\t\tthis._pending.abort();\n\t\t}\n\t},\n\n\t/**\n\t * Get page preview from the API and abort any existing previews.\n\t * @memberof EditorGateway\n\t * @instance\n\t * @param {Object} options API query parameters\n\t * @return {jQuery.Deferred}\n\t */\n\tgetPreview: function ( options ) {\n\t\tvar\n\t\t\tsectionLine = '',\n\t\t\tsectionId = '',\n\t\t\tself = this;\n\n\t\tutil.extend( options, {\n\t\t\taction: 'parse',\n\t\t\t// Enable section preview mode to avoid errors (bug 49218)\n\t\t\tsectionpreview: true,\n\t\t\t// Hide section edit links\n\t\t\tdisableeditsection: true,\n\t\t\t// needed for pre-save transform to work (bug 53692)\n\t\t\tpst: true,\n\t\t\t// Output mobile HTML (bug 54243)\n\t\t\tmobileformat: true,\n\t\t\ttitle: this.title,\n\t\t\tprop: [ 'text', 'sections' ]\n\t\t} );\n\n\t\tthis.abortPreview();\n\t\tthis._pending = this.api.post( options );\n\n\t\treturn this._pending.then( function ( resp ) {\n\t\t\tif ( resp && resp.parse && resp.parse.text ) {\n\t\t\t\t// section 0 haven't a section name so skip\n\t\t\t\tif ( self.sectionId !== 0 &&\n\t\t\t\t\tresp.parse.sections !== undefined &&\n\t\t\t\t\tresp.parse.sections[0] !== undefined\n\t\t\t\t) {\n\t\t\t\t\tif ( resp.parse.sections[0].anchor !== undefined ) {\n\t\t\t\t\t\tsectionId = resp.parse.sections[0].anchor;\n\t\t\t\t\t}\n\t\t\t\t\tif ( resp.parse.sections[0].line !== undefined ) {\n\t\t\t\t\t\tsectionLine = resp.parse.sections[0].line;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\ttext: resp.parse.text['*'],\n\t\t\t\t\tid: sectionId,\n\t\t\t\t\tline: sectionLine\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn util.Deferred().reject();\n\t\t\t}\n\t\t} ).promise( {\n\t\t\tabort: function () { self._pending.abort(); }\n\t\t} );\n\t}\n};\n\nmodule.exports = EditorGateway;\n","/* global $ */\nvar Overlay = require( '../mobile.startup/Overlay' ),\n\tutil = require( '../mobile.startup/util' ),\n\tparseBlockInfo = require( './parseBlockInfo' ),\n\theaders = require( '../mobile.startup/headers' ),\n\tPageGateway = require( '../mobile.startup/PageGateway' ),\n\ticons = require( '../mobile.startup/icons' ),\n\tButton = require( '../mobile.startup/Button' ),\n\ttoast = require( '../mobile.startup/toast' ),\n\tsaveFailureMessage = require( './saveFailureMessage' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\tblockMessageDrawer = require( './blockMessageDrawer' ),\n\tMessageBox = require( '../mobile.startup/MessageBox' ),\n\tmwUser = mw.user;\n\n/**\n * 'Edit' button\n * @param {OO.ui.ToolGroup} toolGroup\n * @param {Object} config\n */\nfunction EditVeTool( toolGroup, config ) {\n\tconfig = config || {};\n\tconfig.classes = [ 'visual-editor' ];\n\tEditVeTool.super.call( this, toolGroup, config );\n}\nOO.inheritClass( EditVeTool, OO.ui.Tool );\n\nEditVeTool.static.name = 'editVe';\nEditVeTool.static.icon = 'edit';\nEditVeTool.static.group = 'editorSwitcher';\nEditVeTool.static.title = mw.msg( 'mobile-frontend-editor-switch-visual-editor' );\n/**\n * click handler\n * @memberof EditVeTool\n * @instance\n */\nEditVeTool.prototype.onSelect = function () {\n\t// will be overridden later\n};\n/**\n * Toolbar update state handler.\n * @memberof EditVeTool\n * @instance\n */\nEditVeTool.prototype.onUpdateState = function () {\n\t// do nothing\n};\n\n/**\n * Base class for SourceEditorOverlay and VisualEditorOverlay\n * @class EditorOverlayBase\n * @extends Overlay\n * @uses Icon\n * @uses user\n * @param {Object} params Configuration options\n * @params {Object} [params.editorOptions] falls back to wgMFEditorOptions if undefined\n * @param {number|null} params.editCount of user\n * @param {boolean} params.editSwitcher whether possible to switch mode in header\n * @param {boolean} params.hasToolbar whether the editor has a toolbar\n */\nfunction EditorOverlayBase( params ) {\n\tvar\n\t\toptions = util.extend(\n\t\t\ttrue,\n\t\t\t{\n\t\t\t\tonBeforeExit: this.onBeforeExit.bind( this ),\n\t\t\t\tclassName: 'overlay editor-overlay',\n\t\t\t\tisBorderBox: false\n\t\t\t},\n\t\t\tparams,\n\t\t\t{\n\t\t\t\tevents: util.extend(\n\t\t\t\t\t{\n\t\t\t\t\t\t'click .back': 'onClickBack',\n\t\t\t\t\t\t'click .continue': 'onClickContinue',\n\t\t\t\t\t\t'click .submit': 'onClickSubmit',\n\t\t\t\t\t\t'click .anonymous': 'onClickAnonymous'\n\t\t\t\t\t},\n\t\t\t\t\tparams.events\n\t\t\t\t)\n\t\t\t}\n\t\t);\n\n\tif ( options.isNewPage ) {\n\t\toptions.placeholder = mw.msg( 'mobile-frontend-editor-placeholder-new-page', mwUser );\n\t}\n\t// change the message to request a summary when not in article namespace\n\tif ( mw.config.get( 'wgNamespaceNumber' ) !== 0 ) {\n\t\toptions.summaryRequestMsg = mw.msg( 'mobile-frontend-editor-summary' );\n\t}\n\tthis.pageGateway = new PageGateway( options.api );\n\tthis.editCount = options.editCount;\n\tthis.isNewPage = options.isNewPage;\n\tthis.isNewEditor = options.editCount === 0;\n\tthis.sectionId = options.sectionId;\n\t// FIXME: Pass this in via options rather than accessing mw.config\n\tthis.config = params.editorOptions || mw.config.get( 'wgMFEditorOptions' );\n\tthis.sessionId = options.sessionId;\n\tthis.overlayManager = options.overlayManager;\n\n\tOverlay.call( this, options );\n}\n\nmfExtend( EditorOverlayBase, Overlay, {\n\t/**\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @mixes Overlay#defaults\n\t * @property {Object} defaults Default options hash.\n\t * @property {OverlayManager} defaults.overlayManager instance\n\t * @property {mw.Api} defaults.api to interact with\n\t * @property {boolean} defaults.hasToolbar Whether the editor has a toolbar or not. When\n\t *  disabled a header will be show instead.\n\t * @property {string} defaults.continueMsg Caption for the next button on edit form\n\t * which takes you to the screen that shows a preview and license information.\n\t * @property {string} defaults.closeMsg Caption for a button that takes you back to editing\n\t * from edit preview screen.\n\t * @property {string} defaults.summaryRequestMsg Header above edit summary input field\n\t * asking the user to summarize the changes they made to the page.\n\t * @property {string} defaults.summaryMsg A placeholder with examples for the summary input\n\t * field asking user what they changed.\n\t * @property {string} defaults.placeholder Placeholder text for empty sections.\n\t * @property {string} defaults.captchaMsg Placeholder for captcha input field.\n\t * @property {string} defaults.captchaTryAgainMsg A message shown when user enters\n\t * wrong CAPTCHA and a new one is displayed.\n\t * @property {string} defaults.switchMsg Label for button that allows the user\n\t * to switch between two different editing interfaces.\n\t * @property {string} defaults.licenseMsg Text and link of the license,\n\t * under which this contribution will be released to inform the user.\n\t */\n\tdefaults: util.extend( {}, Overlay.prototype.defaults, {\n\t\thasToolbar: false,\n\t\tcontinueMsg: mw.msg( 'mobile-frontend-editor-continue' ),\n\t\tcloseMsg: mw.msg( 'mobile-frontend-editor-keep-editing' ),\n\t\tsummaryRequestMsg: mw.msg( 'mobile-frontend-editor-summary-request' ),\n\t\tsummaryMsg: mw.msg( 'mobile-frontend-editor-summary-placeholder' ),\n\t\tplaceholder: mw.msg( 'mobile-frontend-editor-placeholder' ),\n\t\tcaptchaMsg: mw.msg( 'mobile-frontend-account-create-captcha-placeholder' ),\n\t\tcaptchaTryAgainMsg: mw.msg( 'mobile-frontend-editor-captcha-try-again' ),\n\t\tswitchMsg: mw.msg( 'mobile-frontend-editor-switch-editor' ),\n\t\tconfirmMsg: mw.msg( 'mobile-frontend-editor-cancel-confirm' ),\n\t\tlicenseMsg: undefined\n\t} ),\n\t/**\n\t * @inheritdoc\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\ttemplate: util.template( `\n<div class=\"overlay-header-container header-container position-fixed\"></div>\n\n<div class=\"overlay-content\">\n\t<div class=\"panels\">\n\t\t<div class=\"save-panel panel hideable hidden\">\n\t\t\t<div id=\"error-notice-container\"></div>\n\t\t\t<h2 class=\"summary-request\">{{{summaryRequestMsg}}}</h2>\n\t\t\t<textarea rows=\"2\" class=\"mw-ui-input summary\" placeholder=\"{{summaryMsg}}\"></textarea>\n\t\t\t{{#licenseMsg}}<div class=\"license\">{{{licenseMsg}}}</div>{{/licenseMsg}}\n\t\t</div>\n\t\t<div class=\"captcha-panel panel hideable hidden\">\n\t\t\t<div class=\"captcha-box\">\n\t\t\t\t<img id=\"image\" src=\"\">\n\t\t\t\t<div id=\"question\"></div>\n\t\t\t\t<input class=\"captcha-word mw-ui-input\" placeholder=\"{{captchaMsg}}\" />\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t{{>content}}\n</div>\n<div class=\"overlay-footer-container position-fixed\">\n\t{{>footer}}\n</div>\n\t` ),\n\t/**\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tsectionId: '',\n\t/**\n\t * Logs an event to http://meta.wikimedia.org/wiki/Schema:EditAttemptStep\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Object} data\n\t */\n\tlog: function ( data ) {\n\t\tmw.track( 'mf.schemaEditAttemptStep', util.extend( data, {\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\teditor_interface: this.editor,\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tediting_session_id: this.sessionId\n\t\t} ) );\n\t},\n\t/**\n\t * Logs an event to http://meta.wikimedia.org/wiki/Schema:VisualEditorFeatureUse\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Object} data\n\t */\n\tlogFeatureUse: function ( data ) {\n\t\tmw.track( 'mf.schemaVisualEditorFeatureUse', util.extend( data, {\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tediting_session_id: this.sessionId\n\t\t} ) );\n\t},\n\n\t/**\n\t * If this is a new article, require confirmation before saving.\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @return {boolean} The user confirmed saving\n\t */\n\tconfirmSave: function () {\n\t\tif ( this.isNewPage &&\n\t\t\t// TODO: Replace with an OOUI dialog\n\t\t\t!window.confirm( mw.msg( 'mobile-frontend-editor-new-page-confirm', mwUser ) )\n\t\t) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t},\n\t/**\n\t * Executed when page save is complete. Handles reloading the page, showing toast\n\t * messages.\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {number} newRevId ID of the newly created revision\n\t */\n\tonSaveComplete: function ( newRevId ) {\n\t\tvar msg,\n\t\t\t$window = util.getWindow(),\n\t\t\ttitle = this.options.title,\n\t\t\tself = this;\n\n\t\tthis.saved = true;\n\n\t\t// FIXME: use generic method for following 3 lines\n\t\tthis.pageGateway.invalidatePage( title );\n\n\t\tif ( this.isNewPage ) {\n\t\t\tmsg = mw.msg( 'mobile-frontend-editor-success-new-page' );\n\t\t} else if ( this.isNewEditor ) {\n\t\t\tmsg = mw.msg( 'mobile-frontend-editor-success-landmark-1' );\n\t\t} else {\n\t\t\tmsg = mw.msg( 'mobile-frontend-editor-success' );\n\t\t}\n\t\ttoast.showOnPageReload( msg, { type: 'success' } );\n\n\t\t// Ensure we don't lose this event when logging\n\t\tthis.log( {\n\t\t\taction: 'saveSuccess',\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\trevision_id: newRevId\n\t\t} );\n\t\tif ( self.sectionId ) {\n\t\t\t// Ideally we'd want to do this via replaceState (see T189173)\n\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\twindow.location.hash = '#' + self.sectionId;\n\t\t} else {\n\t\t\t// Cancel the hash fragment\n\t\t\t// otherwise clicking back after a save will take you back to the editor.\n\t\t\t// We avoid calling the hide method of the overlay here as this can be asynchronous\n\t\t\t// and may conflict with the window.reload call below.\n\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\twindow.location.hash = '#';\n\t\t}\n\n\t\t$window.off( 'beforeunload.mfeditorwarning' );\n\n\t\t// Note the \"#\" may be in the URL.\n\t\t// If so, using window.location alone will not reload the page\n\t\t// we need to forcefully refresh\n\t\t// eslint-disable-next-line no-restricted-properties\n\t\twindow.location.reload();\n\t},\n\t/**\n\t * Executed when page save fails. Handles logging the error. Subclasses\n\t * should display error messages as appropriate.\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Object} data API response\n\t */\n\tonSaveFailure: function ( data ) {\n\t\tvar key = data && data.errors && data.errors[0] && data.errors[0].code,\n\t\t\t// TODO: This looks incomplete and most of the error codes are wrong.\n\t\t\t// Compare to ve.init.mw.ArticleTargetEvents.js in VisualEditor.\n\t\t\ttypeMap = {\n\t\t\t\teditconflict: 'editConflict',\n\t\t\t\twasdeleted: 'editPageDeleted',\n\t\t\t\t'abusefilter-disallowed': 'extensionAbuseFilter',\n\t\t\t\tcaptcha: 'extensionCaptcha',\n\t\t\t\tspamprotectiontext: 'extensionSpamBlacklist',\n\t\t\t\t'titleblacklist-forbidden-edit': 'extensionTitleBlacklist'\n\t\t\t};\n\n\t\tif ( data.edit && data.edit.captcha ) {\n\t\t\tkey = 'captcha';\n\t\t}\n\n\t\tthis.log( {\n\t\t\taction: 'saveFailure',\n\t\t\tmessage: saveFailureMessage( data ),\n\t\t\ttype: typeMap[key] || 'responseUnknown'\n\t\t} );\n\t},\n\t/**\n\t * Report load errors back to the user. Silently record the error using EventLogging.\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {string} text Text (HTML) of message to display to user\n\t */\n\treportError: function ( text ) {\n\t\tvar errorNotice = new MessageBox( {\n\t\t\tclassName: 'errorbox',\n\t\t\tmsg: text,\n\t\t\theading: mw.msg( 'mobile-frontend-editor-error' )\n\t\t} );\n\t\tthis.$errorNoticeContainer.html( errorNotice.$el );\n\t},\n\thideErrorNotice: function () {\n\t\tthis.$errorNoticeContainer.empty();\n\t},\n\t/**\n\t * Prepares the penultimate screen before saving.\n\t * Expects to be overridden by child class.\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonStageChanges: function () {\n\t\tthis.showHidden( '.save-header, .save-panel' );\n\t\tthis.hideErrorNotice();\n\t\tthis.log( {\n\t\t\taction: 'saveIntent'\n\t\t} );\n\t\t// Scroll to the top of the page, so that the summary input is visible\n\t\t// (even if overlay was scrolled down when editing) and weird iOS header\n\t\t// problems are avoided (header position not updating to the top of the\n\t\t// screen, instead staying lower until a subsequent scroll event).\n\t\twindow.scrollTo( 0, 1 );\n\t},\n\t/**\n\t * Executed when the editor clicks the save button. Expects to be overridden by child\n\t * class. Checks if the save needs to be confirmed.\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonSaveBegin: function () {\n\t\tthis.confirmAborted = false;\n\t\tthis.hideErrorNotice();\n\t\t// Ask for confirmation in some cases\n\t\tif ( !this.confirmSave() ) {\n\t\t\tthis.confirmAborted = true;\n\t\t\treturn;\n\t\t}\n\t\tthis.log( {\n\t\t\taction: 'saveAttempt'\n\t\t} );\n\t},\n\t/**\n\t * @inheritdoc\n\t */\n\tpreRender: function () {\n\t\tconst options = this.options;\n\n\t\tthis.options.headers = [\n\t\t\theaders.formHeader(\n\t\t\t\tutil.template( `\n{{^hasToolbar}}\n<div class=\"overlay-title\">\n\t<h2>{{{editingMsg}}}</h2>\n</div>\n{{/hasToolbar}}\n{{#hasToolbar}}<div class=\"toolbar\"></div>{{/hasToolbar}}\n{{#editSwitcher}}\n\t<div class=\"switcher-container\">\n\t</div>\n{{/editSwitcher}}\n\t\t\t\t` ).render( {\n\t\t\t\t\thasToolbar: options.hasToolbar,\n\t\t\t\t\teditSwitcher: options.editSwitcher,\n\t\t\t\t\teditingMsg: options.editingMsg\n\t\t\t\t} ),\n\t\t\t\toptions.readOnly ? [] : [\n\t\t\t\t\tnew Button( {\n\t\t\t\t\t\ttagName: 'button',\n\t\t\t\t\t\tadditionalClassNames: 'continue',\n\t\t\t\t\t\tdisabled: true,\n\t\t\t\t\t\tlabel: this.config.skipPreview ?\n\t\t\t\t\t\t\tutil.saveButtonMessage() :\n\t\t\t\t\t\t\toptions.continueMsg\n\t\t\t\t\t} )\n\t\t\t\t],\n\t\t\t\ticons.cancel(),\n\t\t\t\t'initial-header'\n\t\t\t),\n\t\t\theaders.saveHeader( options.previewingMsg, 'save-header hidden' ),\n\t\t\theaders.savingHeader( mw.msg( 'mobile-frontend-editor-wait' ) )\n\t\t];\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\t// decide what happens, when the user clicks the continue button\n\t\tif ( this.config.skipPreview ) {\n\t\t\t// skip the preview and save the changes\n\t\t\tthis.nextStep = 'onSaveBegin';\n\t\t} else {\n\t\t\t// default: show the preview step\n\t\t\tthis.nextStep = 'onStageChanges';\n\t\t}\n\t\tthis.$errorNoticeContainer = this.$el.find( '#error-notice-container' );\n\n\t\tOverlay.prototype.postRender.apply( this );\n\n\t\tthis.showHidden( '.initial-header' );\n\t},\n\tshow: function () {\n\t\tvar self = this;\n\t\tthis.allowCloseWindow = mw.confirmCloseWindow( {\n\t\t\t// Returns true if content has changed\n\t\t\ttest: function () {\n\t\t\t\t// Check if content has changed\n\t\t\t\treturn self.hasChanged();\n\t\t\t},\n\n\t\t\t// Message to show the user, if content has changed\n\t\t\tmessage: mw.msg( 'mobile-frontend-editor-cancel-confirm' ),\n\t\t\t// Event namespace\n\t\t\tnamespace: 'editwarning'\n\t\t} );\n\n\t\tthis.saved = false;\n\t\tOverlay.prototype.show.call( this );\n\n\t\t// Inform other interested code that the editor has loaded\n\t\tmw.hook( 'mobileFrontend.editorOpened' ).fire( this.editor );\n\t},\n\t/**\n\t * Back button click handler\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonClickBack: function () {},\n\t/**\n\t * Submit button click handler\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonClickSubmit: function () {\n\t\tthis.onSaveBegin();\n\t},\n\t/**\n\t * Continue button click handler\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonClickContinue: function () {\n\t\tthis[this.nextStep]();\n\t},\n\t/**\n\t * \"Edit without logging in\" button click handler\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\tonClickAnonymous: function () {},\n\t/**\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Function} exit Callback to exit the overlay\n\t */\n\tonBeforeExit: function ( exit ) {\n\t\tvar windowManager,\n\t\t\tself = this;\n\t\tif ( this.hasChanged() && !this.switching ) {\n\t\t\twindowManager = OO.ui.getWindowManager();\n\t\t\twindowManager.addWindows( [ new mw.widgets.AbandonEditDialog() ] );\n\t\t\twindowManager.openWindow( 'abandonedit' )\n\t\t\t\t.closed.then( function ( data ) {\n\t\t\t\t\tif ( data && data.action === 'discard' ) {\n\t\t\t\t\t\t// log abandonment\n\t\t\t\t\t\tself.log( {\n\t\t\t\t\t\t\taction: 'abort',\n\t\t\t\t\t\t\tmechanism: 'cancel',\n\t\t\t\t\t\t\ttype: 'abandon'\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tself.allowCloseWindow.release();\n\t\t\t\t\t\tmw.hook( 'mobileFrontend.editorClosed' ).fire();\n\t\t\t\t\t\texit();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\treturn;\n\t\t}\n\t\tif ( !this.switching && !this.saved ) {\n\t\t\t// log leaving without changes\n\t\t\tthis.log( {\n\t\t\t\taction: 'abort',\n\t\t\t\tmechanism: 'cancel',\n\t\t\t\t// if this is VE, hasChanged will be false because the Surface has\n\t\t\t\t// already been destroyed (which is good because it stops us\n\t\t\t\t// double-showing the abandon changes dialog above)... but we can\n\t\t\t\t// test whether there *were* changes for logging purposes by\n\t\t\t\t// examining the target:\n\t\t\t\ttype: ( this.target && this.target.edited ) ? 'abandon' : 'nochange'\n\t\t\t} );\n\t\t}\n\t\tthis.allowCloseWindow.release();\n\t\tmw.hook( 'mobileFrontend.editorClosed' ).fire();\n\t\texit();\n\t},\n\t/**\n\t * Sets additional values used for anonymous editing warning.\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Object} options\n\t * @return {jQuery.Element}\n\t */\n\tcreateAnonWarning: function ( options ) {\n\t\tvar $actions = $( '<div>' ).addClass( 'actions' ),\n\t\t\t$anonWarning = $( '<div>' ).addClass( 'anonwarning content' ).append(\n\t\t\t\tnew MessageBox( {\n\t\t\t\t\tclassName: 'warningbox anon-msg',\n\t\t\t\t\tmsg: mw.msg( 'mobile-frontend-editor-anonwarning' )\n\t\t\t\t} ).$el,\n\t\t\t\t$actions\n\t\t\t),\n\t\t\tparams = util.extend( {\n\t\t\t// use wgPageName as this includes the namespace if outside Main\n\t\t\t\treturnto: options.returnTo || mw.config.get( 'wgPageName' ),\n\t\t\t\treturntoquery: 'action=edit&section=' + options.sectionId,\n\t\t\t\twarning: 'mobile-frontend-edit-login-action'\n\t\t\t}, options.queryParams ),\n\t\t\tsignupParams = util.extend( {\n\t\t\t\ttype: 'signup',\n\t\t\t\twarning: 'mobile-frontend-edit-signup-action'\n\t\t\t}, options.signupQueryParams ),\n\t\t\tanonymousEditorActions = [\n\t\t\t\tnew Button( {\n\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-editor-anon' ),\n\t\t\t\t\tblock: true,\n\t\t\t\t\tadditionalClassNames: 'anonymous progressive',\n\t\t\t\t\tprogressive: true\n\t\t\t\t} ),\n\t\t\t\tnew Button( {\n\t\t\t\t\tblock: true,\n\t\t\t\t\thref: mw.util.getUrl( 'Special:UserLogin', params ),\n\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-login' )\n\t\t\t\t} ),\n\t\t\t\tnew Button( {\n\t\t\t\t\tblock: true,\n\t\t\t\t\thref: mw.util.getUrl( 'Special:UserLogin', util.extend( params, signupParams ) ),\n\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-watchlist-cta-button-signup' )\n\t\t\t\t} )\n\t\t\t];\n\n\t\t$actions.append(\n\t\t\tanonymousEditorActions.map( function ( action ) {\n\t\t\t\treturn action.$el;\n\t\t\t} )\n\t\t);\n\n\t\treturn $anonWarning;\n\t},\n\n\t/**\n\t * Get an options object not containing any defaults or editor\n\t * specific options, so that it can be used to construct a\n\t * different editor for switching.\n\t *\n\t * @return {Object} Options\n\t */\n\tgetOptionsForSwitch: function () {\n\t\t// Only preserve options that would be passed in editor.js#setupEditor\n\t\t// and skip over defaults.\n\t\treturn {\n\t\t\tswitched: true,\n\t\t\toverlayManager: this.options.overlayManager,\n\t\t\tcurrentPageHTMLParser: this.options.currentPageHTMLParser,\n\t\t\tfakeScroll: this.options.fakeScroll,\n\t\t\tapi: this.options.api,\n\t\t\tlicenseMsg: this.options.licenseMsg,\n\t\t\ttitle: this.options.title,\n\t\t\ttitleObj: this.options.titleObj,\n\t\t\tisAnon: this.options.isAnon,\n\t\t\tisNewPage: this.options.isNewPage,\n\t\t\teditCount: this.options.editCount,\n\t\t\toldId: this.options.oldId,\n\t\t\tcontentLang: this.options.contentLang,\n\t\t\tcontentDir: this.options.contentDir,\n\t\t\tsessionId: this.options.sessionId,\n\t\t\tsectionId: this.options.sectionId\n\t\t};\n\t},\n\n\t/**\n\t * Checks whether the state of the thing being edited as changed. Expects to be\n\t * implemented by child class.\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t */\n\thasChanged: function () {},\n\t/**\n\t * Get a promise that is resolved when the editor data has loaded,\n\t * or rejected when we're refusing to load the editor because the user is blocked.\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @return {jQuery.Promise}\n\t */\n\tgetLoadingPromise: function () {\n\t\treturn this.dataPromise.then( function ( result ) {\n\t\t\t// check if user is blocked\n\t\t\tif ( result && result.blockinfo ) {\n\t\t\t\t// Lazy-load moment only if it's needed, it's somewhat large (it is already used on\n\t\t\t\t// mobile by Echo's notifications panel, where it's also lazy-loaded)\n\t\t\t\treturn mw.loader.using( 'moment' ).then( function () {\n\t\t\t\t\tvar block = parseBlockInfo( result.blockinfo ),\n\t\t\t\t\t\tmessage = blockMessageDrawer( block );\n\t\t\t\t\treturn util.Deferred().reject( message );\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn result;\n\t\t} );\n\t},\n\t/**\n\t * Handles a failed save due to a CAPTCHA provided by ConfirmEdit extension.\n\t * @memberof EditorOverlayBase\n\t * @instance\n\t * @param {Object} details Details returned from the api.\n\t */\n\thandleCaptcha: function ( details ) {\n\t\tvar self = this,\n\t\t\t$input = this.$el.find( '.captcha-word' );\n\n\t\tif ( this.captchaShown ) {\n\t\t\t$input.val( '' );\n\t\t\t$input.attr( 'placeholder', this.options.captchaTryAgainMsg );\n\t\t\tsetTimeout( function () {\n\t\t\t\t$input.attr( 'placeholder', self.options.captchaMsg );\n\t\t\t}, 2000 );\n\t\t}\n\n\t\t// handle different mime types different\n\t\tif ( details.mime.indexOf( 'image/' ) === 0 ) {\n\t\t\t// image based CAPTCHA's like provided by FancyCaptcha, ReCaptcha or similar\n\t\t\tthis.$el.find( '.captcha-panel#question' ).detach();\n\t\t\tthis.$el.find( '.captcha-panel img' ).attr( 'src', details.url );\n\t\t} else {\n\t\t\t// not image based CAPTCHA.\n\t\t\tthis.$el.find( '.captcha-panel #image' ).detach();\n\t\t\tif ( details.mime.indexOf( 'text/html' ) === 0 ) {\n\t\t\t\t// handle mime type of HTML as HTML content (display as-is).\n\t\t\t\t// QuestyCaptcha now have default MIME type \"text/html\": see T147606\n\t\t\t\tthis.$el.find( '.captcha-panel #question' ).html( details.question );\n\t\t\t} else {\n\t\t\t\t// handle mime types\n\t\t\t\t// (other than image based ones and HTML based ones)\n\t\t\t\t// as plain text by default.\n\t\t\t\t// e.g. MathCaptcha (solve a math formula) or\n\t\t\t\t// SimpleCaptcha (simple math formula)\n\t\t\t\tthis.$el.find( '.captcha-panel #question' ).text( details.question );\n\t\t\t}\n\t\t}\n\n\t\tthis.showHidden( '.save-header, .captcha-panel' );\n\t\tthis.captchaShown = true;\n\t}\n} );\n\nmodule.exports = EditorOverlayBase;\n","var EditorOverlayBase = require( './EditorOverlayBase' ),\n\tutil = require( '../mobile.startup/util' ),\n\ticons = require( '../mobile.startup/icons' ),\n\tSection = require( '../mobile.startup/Section' ),\n\tsaveFailureMessage = require( './saveFailureMessage' ),\n\tEditorGateway = require( './EditorGateway' ),\n\tfakeToolbar = require( '../mobile.init/fakeToolbar' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\tVisualEditorOverlay = require( './VisualEditorOverlay' );\n\n/**\n * Overlay that shows an editor\n * @class SourceEditorOverlay\n * @uses Section\n * @uses EditorGateway\n * @uses VisualEditorOverlay\n * @extends EditorOverlayBase\n *\n * @param {Object} options Configuration options\n * @param {Object} [options.visualEditorConfig] falls back to wgVisualEditorConfig if not defined\n * @param {jQuery.Promise} [dataPromise] Optional promise for loading content\n */\nfunction SourceEditorOverlay( options, dataPromise ) {\n\tthis.isFirefox = /firefox/i.test( window.navigator.userAgent );\n\tthis.visualEditorConfig = options.visualEditorConfig ||\n\t\tmw.config.get( 'wgVisualEditorConfig' ) || {};\n\tthis.gateway = new EditorGateway( {\n\t\tapi: options.api,\n\t\ttitle: options.title,\n\t\tsectionId: options.sectionId,\n\t\toldId: options.oldId,\n\t\tisNewPage: options.isNewPage,\n\t\tfromModified: !!dataPromise\n\t} );\n\tthis.readOnly = !!options.oldId; // If old revision, readOnly mode\n\tthis.dataPromise = dataPromise || this.gateway.getContent();\n\tif ( this.isVisualEditorEnabled() ) {\n\t\toptions.editSwitcher = true;\n\t}\n\tif ( this.readOnly ) {\n\t\toptions.readOnly = true;\n\t\toptions.editingMsg = mw.msg( 'mobile-frontend-editor-viewing-source-page', options.title );\n\t} else {\n\t\toptions.editingMsg = mw.msg( 'mobile-frontend-editor-editing-page', options.title );\n\t}\n\toptions.previewingMsg = mw.msg( 'mobile-frontend-editor-previewing-page', options.title );\n\tEditorOverlayBase.call(\n\t\tthis,\n\t\tutil.extend( true,\n\t\t\t{ events: { 'input .wikitext-editor': 'onInputWikitextEditor' } },\n\t\t\toptions\n\t\t)\n\t);\n}\n\nmfExtend( SourceEditorOverlay, EditorOverlayBase, {\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, EditorOverlayBase.prototype.templatePartials, {\n\t\tcontent: util.template( `\n<div lang=\"{{contentLang}}\" dir=\"{{contentDir}}\" class=\"editor-container content\">\n\t<textarea class=\"wikitext-editor\" id=\"wikitext-editor\" cols=\"40\" rows=\"10\" placeholder=\"{{placeholder}}\"></textarea>\n\t<div class=\"preview\"></div>\n</div>\n\t\t` )\n\t} ),\n\t/**\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\teditor: 'wikitext',\n\t/**\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tsectionLine: '',\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\tEditorOverlayBase.prototype.show.apply( this, arguments );\n\t\t// Ensure we do this after showing the overlay, otherwise it doesn't work.\n\t\tthis._resizeEditor();\n\t},\n\t/**\n\t * Check whether VisualEditor is enabled or not.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @return {boolean}\n\t */\n\tisVisualEditorEnabled: function () {\n\t\tvar config = this.visualEditorConfig,\n\t\t\tns = config.namespaces;\n\n\t\treturn ns &&\n\t\t\tns.indexOf(\n\t\t\t\tmw.config.get( 'wgNamespaceNumber' )\n\t\t\t) > -1 &&\n\t\t\tmw.config.get( 'wgTranslatePageTranslation' ) !== 'translation' &&\n\t\t\tmw.config.get( 'wgPageContentModel' ) === 'wikitext';\n\t},\n\t/**\n\t * Wikitext Editor input handler\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonInputWikitextEditor: function () {\n\t\tthis.gateway.setContent( this.$el.find( '.wikitext-editor' ).val() );\n\t\tthis.$el.find( '.continue, .submit' ).prop( 'disabled', false );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonClickBack: function () {\n\t\tEditorOverlayBase.prototype.onClickBack.apply( this, arguments );\n\t\tthis._hidePreview();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this,\n\t\t\tconfig = this.visualEditorConfig,\n\t\t\toptions = this.options,\n\t\t\tshowAnonWarning = options.isAnon && !options.switched;\n\n\t\t// log edit attempt\n\t\tthis.log( { action: 'ready' } );\n\t\tthis.log( { action: 'loaded' } );\n\n\t\tif ( this.isVisualEditorEnabled() ) {\n\t\t\tmw.loader.using( 'ext.visualEditor.switching' ).then( function () {\n\t\t\t\tvar switchToolbar, windowManager, switchWindow,\n\t\t\t\t\ttoolFactory = new OO.ui.ToolFactory(),\n\t\t\t\t\ttoolGroupFactory = new OO.ui.ToolGroupFactory();\n\n\t\t\t\ttoolFactory.register( mw.libs.ve.MWEditModeVisualTool );\n\t\t\t\ttoolFactory.register( mw.libs.ve.MWEditModeSourceTool );\n\t\t\t\tswitchToolbar = new OO.ui.Toolbar( toolFactory, toolGroupFactory, {\n\t\t\t\t\tclasses: [ 'editor-switcher' ]\n\t\t\t\t} );\n\n\t\t\t\tswitchToolbar.on( 'switchEditor', function ( mode ) {\n\t\t\t\t\tvar\n\t\t\t\t\t\tcanSwitch = config.fullRestbaseUrl || config.allowLossySwitching;\n\t\t\t\t\tif ( mode === 'visual' ) {\n\t\t\t\t\t\tif ( !self.gateway.hasChanged ) {\n\t\t\t\t\t\t\tself._switchToVisualEditor();\n\t\t\t\t\t\t} else if ( canSwitch ) {\n\t\t\t\t\t\t\t// Pass wikitext if there are changes.\n\t\t\t\t\t\t\tself._switchToVisualEditor( self.gateway.content );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twindowManager = new OO.ui.WindowManager();\n\t\t\t\t\t\t\tswitchWindow = new mw.libs.ve.SwitchConfirmDialog();\n\t\t\t\t\t\t\twindowManager.$element.appendTo( document.body );\n\t\t\t\t\t\t\twindowManager.addWindows( [ switchWindow ] );\n\t\t\t\t\t\t\twindowManager.openWindow( switchWindow, { mode: 'simple' } )\n\t\t\t\t\t\t\t\t.closed.then( function ( data ) {\n\t\t\t\t\t\t\t\t\tif ( data && data.action === 'discard' ) {\n\t\t\t\t\t\t\t\t\t\tself._switchToVisualEditor();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twindowManager.destroy();\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tswitchToolbar.setup( [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'editMode',\n\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\ticon: 'edit',\n\t\t\t\t\t\ttitle: mw.msg( 'visualeditor-mweditmode-tooltip' ),\n\t\t\t\t\t\tinclude: [ 'editModeVisual', 'editModeSource' ]\n\t\t\t\t\t}\n\t\t\t\t] );\n\n\t\t\t\tself.$el.find( '.switcher-container' ).html( switchToolbar.$element );\n\t\t\t\tswitchToolbar.emit( 'updateState' );\n\t\t\t} );\n\t\t}\n\n\t\tEditorOverlayBase.prototype.postRender.apply( this );\n\n\t\t// This spinner is still used when displaying save/preview panel\n\t\tthis.$el.find( '.overlay-content' ).append( icons.spinner().$el );\n\t\tthis.hideSpinner();\n\n\t\tthis.$preview = this.$el.find( '.preview' );\n\t\tthis.$content = this.$el.find( '.wikitext-editor' );\n\t\tthis.$content.addClass( 'mw-editfont-' + mw.user.options.get( 'editfont' ) );\n\t\tif ( showAnonWarning ) {\n\t\t\tthis.$anonWarning = this.createAnonWarning( options );\n\t\t\tthis.$el.find( '.editor-container' ).append( this.$anonWarning );\n\t\t\tthis.$content.hide();\n\t\t\t// the user has to click login, signup or edit without login,\n\t\t\t// disable \"Next\" button on top right\n\t\t\tthis.$anonHiddenButtons = this.$el.find( '.overlay-header .continue, .editor-switcher' ).hide();\n\t\t}\n\t\t// make license links open in separate tabs\n\t\tthis.$el.find( '.license a' ).attr( 'target', '_blank' );\n\n\t\t// If in readOnly mode, make textarea readonly\n\t\tif ( this.readOnly ) {\n\t\t\tthis.$content.prop( 'readonly', true );\n\t\t}\n\n\t\tthis.$content\n\t\t\t.on( 'input', this._resizeEditor.bind( this ) )\n\t\t\t.one( 'input', function () {\n\t\t\t\tself.log( { action: 'firstChange' } );\n\t\t\t} );\n\n\t\tif ( !showAnonWarning ) {\n\t\t\tthis._loadContent();\n\t\t}\n\t},\n\n\t/**\n\t * Handles click on \"Edit without login\" in anonymous editing warning.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t */\n\tonClickAnonymous: function () {\n\t\tthis.$anonWarning.hide();\n\t\t// reenable \"Next\" button\n\t\tthis.$anonHiddenButtons.show();\n\t\tthis._loadContent();\n\t},\n\n\t/**\n\t * Prepares the preview interface and reveals the save screen of the overlay\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonStageChanges: function () {\n\t\tvar self = this,\n\t\t\tparams = {\n\t\t\t\ttext: this.getContent()\n\t\t\t};\n\n\t\tthis.scrollTop = util.getDocument().find( 'body' ).scrollTop();\n\t\tthis.$content.hide();\n\t\tthis.showSpinner();\n\n\t\tif ( mw.config.get( 'wgIsMainPage' ) ) {\n\t\t\tparams.mainpage = 1; // Setting it to 0 will have the same effect\n\t\t}\n\n\t\tfunction hideSpinnerAndShowPreview() {\n\t\t\tself.hideSpinner();\n\t\t\tself.$preview.show();\n\t\t}\n\n\t\tthis.gateway.getPreview( params ).then( function ( result ) {\n\t\t\tvar parsedText = result.text,\n\t\t\t\tparsedSectionLine = result.line;\n\n\t\t\tself.sectionId = result.id;\n\t\t\t// On desktop edit summaries strip tags. Mimic this behavior on mobile devices\n\t\t\tself.sectionLine = self.parseHTML( '<div>' ).html( parsedSectionLine ).text();\n\t\t\tnew Section( {\n\t\t\t\tel: self.$preview,\n\t\t\t\ttext: parsedText\n\t\t\t} ).$el.find( 'a' ).on( 'click', false );\n\n\t\t\thideSpinnerAndShowPreview();\n\t\t}, function () {\n\t\t\tself.$preview.addClass( 'errorbox' ).text( mw.msg( 'mobile-frontend-editor-error-preview' ) );\n\n\t\t\thideSpinnerAndShowPreview();\n\t\t} );\n\n\t\tEditorOverlayBase.prototype.onStageChanges.apply( this, arguments );\n\t},\n\n\t/**\n\t * Hides the preview and reverts back to initial screen.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t */\n\t_hidePreview: function () {\n\t\tthis.gateway.abortPreview();\n\t\tthis.hideSpinner();\n\t\tthis.$preview.removeClass( 'errorbox' ).hide();\n\t\tthis.$content.show();\n\t\twindow.scrollTo( 0, this.scrollTop );\n\t\tthis.showHidden( '.initial-header' );\n\t},\n\n\t/**\n\t * Resize the editor textarea, maintaining scroll position in iOS\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\t_resizeEditor: function () {\n\t\tvar scrollTop, container, $scrollContainer;\n\n\t\t// exiting early for firefox due to a bug that causes the page to scroll to top\n\t\t// whenever a caret is inserted T214880\n\t\tif ( this.isFirefox ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !this.$scrollContainer ) {\n\t\t\tcontainer = OO.ui.Element.static\n\t\t\t\t.getClosestScrollableContainer( this.$content[ 0 ] );\n\t\t\t// The scroll container will be either within the view\n\t\t\t// or the document element itself.\n\t\t\t$scrollContainer = this.$el.find( container ).length ?\n\t\t\t\tthis.$el.find( container ) : util.getDocument();\n\t\t\tthis.$scrollContainer = $scrollContainer;\n\t\t\tthis.$content.css( 'padding-bottom', this.$scrollContainer.height() * 0.6 );\n\t\t} else {\n\t\t\t$scrollContainer = this.$scrollContainer;\n\t\t}\n\n\t\t// Only do this if scroll container exists\n\t\tif ( this.$content.prop( 'scrollHeight' ) && $scrollContainer.length ) {\n\t\t\tscrollTop = $scrollContainer.scrollTop();\n\t\t\tthis.$content\n\t\t\t\t.css( 'height', 'auto' )\n\t\t\t\t// can't reuse prop( 'scrollHeight' ) because we need the current value\n\t\t\t\t.css( 'height', ( this.$content.prop( 'scrollHeight' ) + 2 ) + 'px' );\n\t\t\t$scrollContainer.scrollTop( scrollTop );\n\t\t}\n\t},\n\n\t/**\n\t * Set content to the user input field.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @param {string} content The content to set.\n\t */\n\tsetContent: function ( content ) {\n\t\tthis.$content\n\t\t\t.show()\n\t\t\t.val( content );\n\t\tthis._resizeEditor();\n\t},\n\n\t/**\n\t * Returns the content of the user input field.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @return {string}\n\t */\n\tgetContent: function () {\n\t\treturn this.$content.val();\n\t},\n\n\t/**\n\t * Requests content from the API and reveals it in UI.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t */\n\t_loadContent: function () {\n\t\tvar self = this;\n\n\t\tthis.$content.hide();\n\n\t\tthis.getLoadingPromise()\n\t\t\t.then( function ( result ) {\n\t\t\t\tvar content = result.text;\n\n\t\t\t\tself.setContent( content );\n\n\t\t\t\tif ( self.gateway.fromModified ) {\n\t\t\t\t\t// Trigger intial EditorGateway#setContent and update save button\n\t\t\t\t\tself.onInputWikitextEditor();\n\t\t\t\t}\n\t\t\t} );\n\t},\n\n\t/**\n\t * Loads a {VisualEditorOverlay} and replaces the existing SourceEditorOverlay with it\n\t * based on the current option values.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @private\n\t * @param {string} [wikitext] Wikitext to pass to VE\n\t */\n\t_switchToVisualEditor: function ( wikitext ) {\n\t\tvar self = this;\n\t\tthis.log( {\n\t\t\taction: 'abort',\n\t\t\ttype: 'switchnochange',\n\t\t\tmechanism: 'navigate'\n\t\t} );\n\t\tthis.logFeatureUse( {\n\t\t\tfeature: 'editor-switch',\n\t\t\taction: 'visual-mobile'\n\t\t} );\n\n\t\t// Save a user setting indicating that this user prefers using the VisualEditor\n\t\tmw.storage.set( 'preferredEditor', 'VisualEditor' );\n\n\t\tthis.$el.addClass( 'switching' );\n\t\tthis.$el.find( '.overlay-header-container' ).hide();\n\t\tthis.$el.append( fakeToolbar() );\n\t\tthis.$content.prop( 'readonly', true );\n\n\t\tmw.loader.using( 'ext.visualEditor.targetLoader' ).then( function () {\n\t\t\tmw.libs.ve.targetLoader.addPlugin( 'mobile.editor.ve' );\n\t\t\treturn mw.libs.ve.targetLoader.loadModules( 'visual' );\n\t\t} ).then(\n\t\t\tfunction () {\n\t\t\t\tvar newOverlay, options = self.getOptionsForSwitch();\n\t\t\t\toptions.SourceEditorOverlay = SourceEditorOverlay;\n\t\t\t\tif ( wikitext ) {\n\t\t\t\t\toptions.dataPromise = mw.libs.ve.targetLoader.requestPageData( 'visual', mw.config.get( 'wgRelevantPageName' ), {\n\t\t\t\t\t\tsection: options.sectionId,\n\t\t\t\t\t\toldId: options.oldId || mw.config.get( 'wgRevisionId' ),\n\t\t\t\t\t\ttargetName: 'mobile',\n\t\t\t\t\t\tmodified: true,\n\t\t\t\t\t\twikitext: wikitext\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tdelete options.dataPromise;\n\t\t\t\t}\n\t\t\t\tnewOverlay = new VisualEditorOverlay( options );\n\t\t\t\tnewOverlay.getLoadingPromise().then( function () {\n\t\t\t\t\tself.switching = true;\n\t\t\t\t\tself.overlayManager.replaceCurrent( newOverlay );\n\t\t\t\t\tself.switching = false;\n\t\t\t\t} );\n\t\t\t},\n\t\t\tfunction () {\n\t\t\t\tself.$el.removeClass( 'switching' );\n\t\t\t\tself.$el.find( '.overlay-header-container' ).show();\n\t\t\t\tself.$el.find( '.ve-mobile-fakeToolbar-container' ).remove();\n\t\t\t\tself.$content.prop( 'readonly', false );\n\t\t\t\t// FIXME: We should show an error notification, but right now toast\n\t\t\t\t// notifications are not dismissible when shown within the editor.\n\t\t\t}\n\t\t);\n\t},\n\n\t/**\n\t * Executed when the editor clicks the save/publish button. Handles logging and submitting\n\t * the save action to the editor API.\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonSaveBegin: function () {\n\t\tvar self = this,\n\t\t\toptions = {\n\t\t\t\tsummary: this.$el.find( '.summary' ).val()\n\t\t\t};\n\n\t\tif ( self.sectionLine !== '' ) {\n\t\t\toptions.summary = '/* ' + self.sectionLine + ' */' + options.summary;\n\t\t}\n\t\tEditorOverlayBase.prototype.onSaveBegin.apply( this, arguments );\n\t\tif ( this.confirmAborted ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( this.captchaId ) {\n\t\t\toptions.captchaId = this.captchaId;\n\t\t\toptions.captchaWord = this.$el.find( '.captcha-word' ).val();\n\t\t}\n\n\t\tthis.showHidden( '.saving-header' );\n\n\t\tthis.gateway.save( options )\n\t\t\t.then( function ( newRevId ) {\n\t\t\t\tvar title = self.options.title;\n\t\t\t\t// Special case behaviour of main page\n\t\t\t\tif ( mw.config.get( 'wgIsMainPage' ) ) {\n\t\t\t\t\t// FIXME: Blocked on T189173\n\t\t\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\t\t\twindow.location = mw.util.getUrl( title );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tself.onSaveComplete( newRevId );\n\t\t\t}, function ( data ) {\n\t\t\t\tself.onSaveFailure( data );\n\t\t\t} );\n\t},\n\n\t/**\n\t * Executed when page save fails. Handles error display and bookkeeping,\n\t * passes logging duties to the parent.\n\t * @inheritdoc\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t */\n\tonSaveFailure: function ( data ) {\n\t\tvar msg, noRetry;\n\n\t\tif ( data.edit && data.edit.captcha ) {\n\t\t\tthis.captchaId = data.edit.captcha.id;\n\t\t\tthis.handleCaptcha( data.edit.captcha );\n\t\t} else {\n\t\t\tmsg = saveFailureMessage( data );\n\t\t\tthis.reportError( msg );\n\t\t\tthis.showHidden( '.save-header, .save-panel' );\n\n\t\t\t// Some errors may be temporary, but for others we know for sure that the save will\n\t\t\t// never succeed, so don't confuse the user by giving them the option to retry.\n\t\t\tnoRetry = data.errors && data.errors.some( function ( error ) {\n\t\t\t\treturn error.code === 'abusefilter-disallowed';\n\t\t\t} );\n\n\t\t\tif ( noRetry ) {\n\t\t\t\t// disable continue and save buttons, reenabled when user changes content\n\t\t\t\tthis.$el.find( '.continue, .submit' ).prop( 'disabled', true );\n\t\t\t}\n\t\t}\n\n\t\tEditorOverlayBase.prototype.onSaveFailure.apply( this, arguments );\n\t},\n\n\t/**\n\t * Checks whether the existing content has changed.\n\t * @memberof SourceEditorOverlay\n\t * @instance\n\t * @return {boolean}\n\t */\n\thasChanged: function () {\n\t\treturn this.gateway.hasChanged;\n\t}\n} );\n\nmodule.exports = SourceEditorOverlay;\n","/* global ve, $ */\nvar EditorOverlayBase = require( './EditorOverlayBase' ),\n\tEditorGateway = require( './EditorGateway' ),\n\tfakeToolbar = require( '../mobile.init/fakeToolbar' ),\n\tmfExtend = require( '../mobile.startup/mfExtend' ),\n\trouter = mw.loader.require( 'mediawiki.router' ),\n\tidentifyLeadParagraph = require( './identifyLeadParagraph' ),\n\tutil = require( '../mobile.startup/util' );\n\n/**\n * Overlay for VisualEditor view\n * @class VisualEditorOverlay\n * @extends EditorOverlayBase\n *\n * @param {Object} options Configuration options\n * @param {SourceEditorOverlay} options.SourceEditorOverlay Class to use for standard\n *  Wikitext editor. It must be passed in explicitly to avoid a cyclic\n *  dependency between VisualEditorOverlay and SourceEditorOverlay\n */\nfunction VisualEditorOverlay( options ) {\n\tvar surfaceReady = util.Deferred();\n\n\tEditorOverlayBase.call( this,\n\t\tutil.extend( {\n\t\t\teditSwitcher: false,\n\t\t\thasToolbar: true,\n\t\t\tonBeforeExit: this.onBeforeExit.bind( this ),\n\t\t\tisBorderBox: false,\n\t\t\tclassName: 'overlay editor-overlay editor-overlay-ve'\n\t\t}, options )\n\t);\n\tthis.SourceEditorOverlay = options.SourceEditorOverlay;\n\tthis.isNewPage = options.isNewPage;\n\tthis.fromModified = options.dataPromise && options.switched;\n\n\t// Gateway present for a few utility purposes; the VE articletarget\n\t// handles the actual API calls separately\n\tthis.gateway = new EditorGateway( {\n\t\tapi: options.api,\n\t\ttitle: options.title,\n\t\tsectionId: options.sectionId,\n\t\toldId: options.oldId,\n\t\tisNewPage: options.isNewPage\n\t} );\n\n\tthis.origDataPromise = this.options.dataPromise || mw.libs.ve.targetLoader.requestPageData(\n\t\t'visual',\n\t\toptions.titleObj.getPrefixedDb(),\n\t\t{\n\t\t\tsessionStore: true,\n\t\t\tsection: options.sectionId || null,\n\t\t\toldId: options.oldId || undefined,\n\t\t\ttargetName: ve.init.mw.MobileArticleTarget.static.trackingName\n\t\t}\n\t);\n\n\tthis.target = ve.init.mw.targetFactory.create( 'article', this, {\n\t\t$element: this.$el,\n\t\tsection: this.options.sectionId\n\t} );\n\tthis.target.once( 'surfaceReady', function () {\n\t\tsurfaceReady.resolve();\n\n\t\tthis.target.getSurface().getModel().getDocument().once( 'transact', function () {\n\t\t\tthis.log( { action: 'firstChange' } );\n\t\t}.bind( this ) );\n\t}.bind( this ) );\n\n\tthis.target.load( this.origDataPromise );\n\n\t// Overlay is only shown after this is resolved. It must be resolved\n\t// with the API response regardless of what we are waiting for.\n\tthis.dataPromise = this.origDataPromise.then( function ( data ) {\n\t\treturn surfaceReady.then( function () {\n\t\t\treturn data && data.visualeditor;\n\t\t} );\n\t} );\n}\n\nmfExtend( VisualEditorOverlay, EditorOverlayBase, {\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\ttemplatePartials: util.extend( {}, EditorOverlayBase.prototype.templatePartials, {\n\t\teditHeader: util.template( `\n<div class=\"overlay-header header initial-header hideable hidden\">\n\t<div class=\"toolbar\"></div>\n</div>\n\t\t` ),\n\t\tcontent: util.template( `\n<div class=\"surface\" lang=\"{{contentLang}}\" dir=\"{{contentDir}}\">\n</div>\n\t\t` )\n\t} ),\n\t/**\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\teditor: 'visualeditor',\n\t/**\n\t * Destroy the existing VisualEditor target.\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tdestroyTarget: function () {\n\t\tif ( this.target ) {\n\t\t\tthis.target.destroy();\n\t\t\tthis.target = null;\n\t\t}\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\tvar\n\t\t\toptions = this.options,\n\t\t\tshowAnonWarning = options.isAnon && !options.switched;\n\n\t\tEditorOverlayBase.prototype.show.apply( this, arguments );\n\n\t\tthis.emit( 'editor-loaded' );\n\t\t// log edit attempt\n\t\tthis.log( { action: 'ready' } );\n\t\tthis.log( { action: 'loaded' } );\n\n\t\tif ( !showAnonWarning ) {\n\t\t\tthis.redoTargetInit();\n\t\t} else {\n\t\t\tthis.$anonWarning = this.createAnonWarning( this.options );\n\t\t\tthis.$el.append( this.$anonWarning );\n\t\t\tthis.$el.find( '.overlay-content' ).hide();\n\t\t}\n\t},\n\t/**\n\t * Re-do some initialization steps that might have happened while the overlay\n\t * was hidden, but only work correctly after it is shown.\n\t */\n\tredoTargetInit: function () {\n\t\tthis.target.adjustContentPadding();\n\t\tthis.target.restoreEditSection();\n\t\tthis.scrollToLeadParagraph();\n\t},\n\t/**\n\t * Scroll so that the lead paragraph in edit mode shows at the same place on the screen\n\t * as the lead paragraph in read mode.\n\t *\n\t * Their normal position is different because of (most importantly) the lead paragraph\n\t * transformation to move it before the infobox, and also invisible templates and slugs\n\t * caused by the presence of hatnote templates (both only shown in edit mode).\n\t */\n\tscrollToLeadParagraph: function () {\n\t\tvar editLead, editLeadView, readLead, offset,\n\t\t\tcurrentPageHTMLParser = this.options.currentPageHTMLParser,\n\t\t\tfakeScroll = this.options.fakeScroll,\n\t\t\t$window = $( window ),\n\t\t\tsection = this.target.section,\n\t\t\tsurface = this.target.getSurface(),\n\t\t\tmode = surface.getMode();\n\n\t\tif ( ( section === null || section === 0 ) && mode === 'visual' ) {\n\t\t\teditLead = identifyLeadParagraph( surface.getView().$attachedRootNode );\n\t\t\tif ( currentPageHTMLParser.getLeadSectionElement() ) {\n\t\t\t\treadLead = identifyLeadParagraph( currentPageHTMLParser.getLeadSectionElement() );\n\t\t\t}\n\n\t\t\tif ( editLead && readLead ) {\n\t\t\t\toffset = $( editLead ).offset().top - ( $( readLead ).offset().top - fakeScroll );\n\t\t\t\t$window.scrollTop( $window.scrollTop() + offset );\n\t\t\t\t// Set a model range to match\n\t\t\t\teditLeadView = $( editLead ).data( 'view' );\n\t\t\t\tif ( editLeadView ) {\n\t\t\t\t\tsurface.getModel().setLinearSelection(\n\t\t\t\t\t\tnew ve.Range( editLeadView.getModel().getRange().start )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonBeforeExit: function ( exit ) {\n\t\tvar overlay = this;\n\t\tEditorOverlayBase.prototype.onBeforeExit.call( this, function () {\n\t\t\t// If this function is called, the parent method has decided that we should exit\n\t\t\texit();\n\t\t\t// VE-specific cleanup\n\t\t\toverlay.destroyTarget();\n\t\t} );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonClickBack: function () {\n\t\tEditorOverlayBase.prototype.onClickBack.apply( this, arguments );\n\t\tthis.switchToEditor();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonClickAnonymous: function () {\n\t\tvar self = this;\n\t\tthis.$anonWarning.hide();\n\t\tself.$el.find( '.overlay-content' ).show();\n\t\tthis.redoTargetInit();\n\t},\n\t/**\n\t * Reveal the editing interface.\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tswitchToEditor: function () {\n\t\tthis.showHidden( '.initial-header' );\n\t},\n\t/**\n\t * Loads an {SourceEditorOverlay} and replaces the existing {VisualEditorOverlay}\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t * @param {jQuery.Promise} [dataPromise] Optional promise for loading content\n\t */\n\tswitchToSourceEditor: function ( dataPromise ) {\n\t\tvar self = this,\n\t\t\tSourceEditorOverlay = this.SourceEditorOverlay,\n\t\t\tnewOverlay,\n\t\t\toptions = this.getOptionsForSwitch();\n\t\tthis.log( {\n\t\t\taction: 'abort',\n\t\t\ttype: 'switchnochange',\n\t\t\tmechanism: 'navigate'\n\t\t} );\n\t\tthis.logFeatureUse( {\n\t\t\tfeature: 'editor-switch',\n\t\t\taction: 'source-mobile'\n\t\t} );\n\n\t\t// Save a user setting indicating that this user prefers using the SourceEditor\n\t\tmw.storage.set( 'preferredEditor', 'SourceEditor' );\n\n\t\tthis.$el.addClass( 'switching' );\n\t\tthis.$el.find( '.overlay-header-container' ).hide();\n\t\tthis.$el.append( fakeToolbar() );\n\t\tthis.target.getSurface().setReadOnly( true );\n\n\t\tif ( dataPromise ) {\n\t\t\t// If switching with edits we can't stay in section editing, as a VE edit\n\t\t\t// can always affect the whole document (e.g. references)\n\t\t\toptions.sectionId = null;\n\t\t\trouter.navigateTo( document.title, {\n\t\t\t\tpath: '#/editor/all',\n\t\t\t\tuseReplaceState: true\n\t\t\t} );\n\t\t}\n\t\tnewOverlay = new SourceEditorOverlay( options, dataPromise );\n\t\tnewOverlay.getLoadingPromise().then( function () {\n\t\t\tself.switching = true;\n\t\t\tself.overlayManager.replaceCurrent( newOverlay );\n\t\t\tself.switching = false;\n\t\t} );\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\tonSaveComplete: function () {\n\t\tEditorOverlayBase.prototype.onSaveComplete.apply( this, arguments );\n\t\tthis.destroyTarget();\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof VisualEditorOverlay\n\t * @instance\n\t */\n\thasChanged: function () {\n\t\tif ( this.saved ) {\n\t\t\t// If we just saved, there's not really any changes, and the\n\t\t\t// target is going to be destroyed in one tick\n\t\t\treturn false;\n\t\t}\n\t\treturn this.fromModified || (\n\t\t\tthis.target &&\n\t\t\tthis.target.getSurface() &&\n\t\t\tthis.target.getSurface().getModel().hasBeenModified()\n\t\t);\n\t}\n} );\n\nmodule.exports = VisualEditorOverlay;\n","var Drawer = require( '../mobile.startup/Drawer' ),\n\tBlockMessageDetails = require( './BlockMessageDetails' );\n\n/**\n * @typedef {Object} BlockMessageOptions\n * @property {number} blockId representing the block\n * @property {boolean} partial is this a partial block?\n * @property {Object} creator\n * @property {string} creator.name of the blocker\n * @property {string} creator.url associated with the block\n * @property {string} reason for block\n * @property {string} [duration] of block\n * @property {string} [expiry] of block\n */\n\n/**\n * This creates the drawer at the bottom of the screen that appears when a\n * blocked user tries to edit.\n * @param {BlockMessageOptions} props\n * @return {Drawer}\n */\nmodule.exports = function blockMessageDrawer( props ) {\n\treturn new Drawer( {\n\t\tclassName: 'drawer block-message',\n\t\tchildren: [\n\t\t\t( new BlockMessageDetails( props ) ).$el\n\t\t]\n\t} );\n};\n","/* global $ */\n/**\n * Find first paragraph that has text content, i.e. paragraphs that are not empty.\n * Keep in sync with MoveLeadParagraphTransform::identifyLeadParagraph().\n *\n * @param {jQuery} $body Where to search for paragraphs\n * @return {Node|null} The lead paragraph\n */\nmodule.exports = function identifyLeadParagraph( $body ) {\n\tvar $paragraphs, i, node;\n\n\t// Keep in sync with MoveLeadParagraphTransform::isNotEmptyNode()\n\tfunction isNotEmptyNode( node ) {\n\t\treturn /\\S/.test( node.textContent );\n\t}\n\n\t// Keep in sync with MoveLeadParagraphTransform::isNonLeadParagraph()\n\tfunction isNonLeadParagraph( node ) {\n\t\tvar $coords;\n\t\tif ( isNotEmptyNode( node ) ) {\n\t\t\t$coords = $( node ).find( 'span#coordinates' );\n\t\t\tif ( !$coords.length ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ( node.textContent ) {\n\t\t\t\treturn node.textContent === $coords[ 0 ].textContent;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t$paragraphs = $body.children( 'p' );\n\tfor ( i = 0; i < $paragraphs.length; i++ ) {\n\t\tnode = $paragraphs[ i ];\n\t\tif ( !isNonLeadParagraph( node ) ) {\n\t\t\treturn node;\n\t\t}\n\t}\n\treturn null;\n};\n","var m = require( './../mobile.startup/moduleLoaderSingleton' ),\n\tSourceEditorOverlay = require( './SourceEditorOverlay' ),\n\tVisualEditorOverlay = require( './VisualEditorOverlay' ),\n\tschemaEditAttemptStep = require( './schemaEditAttemptStep' );\n\n// Exposed for MobileFrontend mobile.init usage.\nm.define( 'mobile.editor.overlay/SourceEditorOverlay', SourceEditorOverlay );\nm.define( 'mobile.editor.overlay/VisualEditorOverlay', VisualEditorOverlay );\n// setup schema:edit logging\nschemaEditAttemptStep();\n","/**\n * @param {string} blockinfo\n * @return {Object}\n */\nmodule.exports = function parseBlockInfo( blockinfo ) {\n\tvar blockInfo, expiry, reason,\n\t\tmoment = window.moment;\n\n\t// Workaround to parse a message parameter for mw.message, see T96885\n\tfunction jqueryMsgParse( wikitext ) {\n\t\tvar parser, ast;\n\t\t// eslint-disable-next-line new-cap\n\t\tparser = new mw.jqueryMsg.parser();\n\t\ttry {\n\t\t\tast = parser.wikiTextToAst( wikitext );\n\t\t\treturn parser.emitter.emit( ast ).html();\n\t\t} catch ( e ) {\n\t\t\t// Ignore error as it's probably the parser error. Usually this is because we\n\t\t\t// can't parse templates.\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tblockInfo = {\n\t\tpartial: blockinfo.blockpartial || false,\n\t\tcreator: {\n\t\t\tname: blockinfo.blockedby,\n\t\t\turl: mw.Title.makeTitle(\n\t\t\t\tmw.config.get( 'wgNamespaceIds' ).user,\n\t\t\t\tblockinfo.blockedby\n\t\t\t).getUrl()\n\t\t},\n\t\texpiry: null,\n\t\tduration: null,\n\t\treason: '',\n\t\tblockId: blockinfo.blockid\n\t};\n\n\texpiry = blockinfo.blockexpiry;\n\tif ( [ 'infinite', 'indefinite', 'infinity', 'never' ].indexOf( expiry ) === -1 ) {\n\t\tblockInfo.expiry = moment( expiry ).format( 'LLL' );\n\t\tblockInfo.duration = moment().to( expiry, true );\n\t}\n\n\treason = blockinfo.blockreason;\n\tif ( reason ) {\n\t\tblockInfo.reason = jqueryMsgParse( reason ) || mw.html.escape( reason );\n\t} else {\n\t\tblockInfo.reason = mw.message( 'mobile-frontend-editor-generic-block-reason' ).escaped();\n\t}\n\n\treturn blockInfo;\n};\n","/**\n * Build a save failure message from the API response\n * @param {Object} data API response\n * @return {string} message HTML text describing the failure for display to the user\n */\nmodule.exports = function saveFailureMessage( data ) {\n\t// In most cases, return the error message from the API directly.\n\t// Handle a few exceptions where it is unsuitable for end-users\n\t// (some error messages are seemingly intended for tool developers).\n\n\tvar code = data && data.errors && data.errors[0] && data.errors[0].code;\n\n\tif ( code === 'editconflict' ) {\n\t\treturn mw.msg( 'mobile-frontend-editor-error-conflict' );\n\t}\n\n\tif ( code === 'readonly' ) {\n\t\treturn data.errors[0].html + '<br>' + data.errors[0].data.readonlyreason;\n\t}\n\n\tif ( data.errors && data.errors[0] ) {\n\t\treturn data.errors[0].html;\n\t}\n\n\t// This probably indicates a connection problem and a \"fake\" response\n\t// generated by mediawiki.Api. TODO Give a better error message here.\n\treturn '';\n};\n","module.exports = function () {\n\tvar trackdebug = !!mw.util.getParamValue( 'trackdebug' );\n\n\tif ( !mw.config.exists( 'wgWMESchemaEditAttemptStepSamplingRate' ) ) {\n\t\treturn;\n\t}\n\n\tmw.loader.using( [ 'ext.eventLogging' ] ).then( function () {\n\t\tvar // Schema class is provided by ext.eventLogging\n\t\t\tSchema = mw.eventLog.Schema,\n\t\t\tuser = mw.user,\n\t\t\tsampleRate = mw.config.get( 'wgWMESchemaEditAttemptStepSamplingRate' ),\n\t\t\tactionPrefixMap = {\n\t\t\t\tfirstChange: 'first_change',\n\t\t\t\tsaveIntent: 'save_intent',\n\t\t\t\tsaveAttempt: 'save_attempt',\n\t\t\t\tsaveSuccess: 'save_success',\n\t\t\t\tsaveFailure: 'save_failure'\n\t\t\t},\n\t\t\ttiming = {},\n\t\t\t/**\n\t\t\t * Edit schema\n\t\t\t * https://meta.wikimedia.org/wiki/Schema:EditAttemptStep\n\t\t\t */\n\t\t\t/* eslint-disable camelcase */\n\t\t\tschemaEditAttemptStep = new Schema(\n\t\t\t\t'EditAttemptStep',\n\t\t\t\tsampleRate,\n\t\t\t\t{\n\t\t\t\t\tpage_id: mw.config.get( 'wgArticleId' ),\n\t\t\t\t\trevision_id: mw.config.get( 'wgRevisionId' ),\n\t\t\t\t\tpage_title: mw.config.get( 'wgPageName' ),\n\t\t\t\t\tpage_ns: mw.config.get( 'wgNamespaceNumber' ),\n\t\t\t\t\tuser_id: user.getId(),\n\t\t\t\t\tuser_class: user.isAnon() ? 'IP' : undefined,\n\t\t\t\t\tuser_editcount: mw.config.get( 'wgUserEditCount', 0 ),\n\t\t\t\t\tmw_version: mw.config.get( 'wgVersion' ),\n\t\t\t\t\tplatform: 'phone',\n\t\t\t\t\tintegration: 'page',\n\t\t\t\t\tpage_token: user.getPageviewToken(),\n\t\t\t\t\tsession_token: user.sessionId(),\n\t\t\t\t\tversion: 1\n\t\t\t\t}\n\t\t\t);\n\t\t\t/* eslint-enable camelcase */\n\n\t\tif ( mw.config.get( 'wgMFSchemaEditAttemptStepAnonymousUserId' ) ) {\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tschemaEditAttemptStep.defaults.anonymous_user_token = mw.config.get( 'wgMFSchemaEditAttemptStepAnonymousUserId' );\n\t\t}\n\t\tif ( mw.config.get( 'wgMFSchemaEditAttemptStepBucket' ) ) {\n\t\t\tschemaEditAttemptStep.defaults.bucket = mw.config.get( 'wgMFSchemaEditAttemptStepBucket' );\n\t\t}\n\n\t\tfunction log() {\n\t\t\t// mw.log is a no-op unless resource loader is in debug mode, so\n\t\t\t// this allows trackdebug to work independently (T211698)\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log.apply( console, arguments );\n\t\t}\n\n\t\tfunction computeDuration( action, event, timeStamp ) {\n\t\t\t// This is duplicated from the VisualEditor extension\n\t\t\t// (ve.init.mw.trackSubscriber.js). Changes to this should be kept in\n\t\t\t// sync with that file, so the data remains consistent.\n\t\t\tif ( event.timing !== undefined ) {\n\t\t\t\treturn event.timing;\n\t\t\t}\n\n\t\t\tswitch ( action ) {\n\t\t\t\tcase 'ready':\n\t\t\t\t\treturn timeStamp - timing.init;\n\t\t\t\tcase 'loaded':\n\t\t\t\t\treturn timeStamp - timing.init;\n\t\t\t\tcase 'firstChange':\n\t\t\t\t\treturn timeStamp - timing.ready;\n\t\t\t\tcase 'saveIntent':\n\t\t\t\t\treturn timeStamp - timing.ready;\n\t\t\t\tcase 'saveAttempt':\n\t\t\t\t\treturn timeStamp - timing.saveIntent;\n\t\t\t\tcase 'saveSuccess':\n\t\t\t\tcase 'saveFailure':\n\t\t\t\t\t// HERE BE DRAGONS: the caller must compute these themselves\n\t\t\t\t\t// for sensible results. Deliberately sabotage any attempts to\n\t\t\t\t\t// use the default by returning -1\n\t\t\t\t\tmw.log.warn( 'mf.schemaEditAttemptStep: Do not rely on default timing value for saveSuccess/saveFailure' );\n\t\t\t\t\treturn -1;\n\t\t\t\tcase 'abort':\n\t\t\t\t\tswitch ( event.abort_type ) {\n\t\t\t\t\t\tcase 'preinit':\n\t\t\t\t\t\t\treturn timeStamp - timing.init;\n\t\t\t\t\t\tcase 'nochange':\n\t\t\t\t\t\tcase 'switchwith':\n\t\t\t\t\t\tcase 'switchwithout':\n\t\t\t\t\t\tcase 'switchnochange':\n\t\t\t\t\t\tcase 'abandon':\n\t\t\t\t\t\t\treturn timeStamp - timing.ready;\n\t\t\t\t\t\tcase 'abandonMidsave':\n\t\t\t\t\t\t\treturn timeStamp - timing.saveAttempt;\n\t\t\t\t\t}\n\t\t\t\t\tmw.log.warn( 'mf.schemaEditAttemptStep: Unrecognized abort type', event.type );\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tmw.log.warn( 'mf.schemaEditAttemptStep: Unrecognized action', action );\n\t\t\treturn -1;\n\t\t}\n\n\t\tmw.trackSubscribe( 'mf.schemaEditAttemptStep', function ( topic, data, timeStamp ) {\n\t\t\tvar actionPrefix = actionPrefixMap[ data.action ] || data.action,\n\t\t\t\tduration = 0;\n\n\t\t\ttimeStamp = timeStamp || this.timeStamp; // I8e82acc12 back-compat\n\n\t\t\t// Schema's kind of a mess of special properties\n\t\t\tif ( data.action === 'init' || data.action === 'abort' || data.action === 'saveFailure' ) {\n\t\t\t\tdata[ actionPrefix + '_type' ] = data.type;\n\t\t\t}\n\t\t\tif ( data.action === 'init' || data.action === 'abort' ) {\n\t\t\t\tdata[ actionPrefix + '_mechanism' ] = data.mechanism;\n\t\t\t}\n\t\t\tif ( data.action !== 'init' ) {\n\t\t\t\t// Schema actually does have an init_timing field, but we don't want to\n\t\t\t\t// store it because it's not meaningful.\n\t\t\t\tduration = Math.round( computeDuration( data.action, data, timeStamp ) );\n\t\t\t\tdata[ actionPrefix + '_timing' ] = duration;\n\t\t\t}\n\t\t\tif ( data.action === 'saveFailure' ) {\n\t\t\t\tdata[ actionPrefix + '_message' ] = data.message;\n\t\t\t}\n\n\t\t\t// Remove renamed properties\n\t\t\tdelete data.type;\n\t\t\tdelete data.mechanism;\n\t\t\tdelete data.timing;\n\t\t\tdelete data.message;\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tdata.is_oversample =\n\t\t\t\t!mw.eventLog.inSample( 1 / sampleRate );\n\n\t\t\tif ( data.action === 'abort' && data.abort_type !== 'switchnochange' ) {\n\t\t\t\ttiming = {};\n\t\t\t} else {\n\t\t\t\ttiming[ data.action ] = timeStamp;\n\t\t\t}\n\n\t\t\t// Switching between visual and source produces a chain of\n\t\t\t// abort/ready/loaded events and no init event, so suppress them for\n\t\t\t// consistency with desktop VE's logging.\n\t\t\tif ( data.abort_type === 'switchnochange' ) {\n\t\t\t\t// The initial abort, flagged as a switch\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( timing.abort ) {\n\t\t\t\t// An abort was previously logged\n\t\t\t\tif ( data.action === 'ready' ) {\n\t\t\t\t\t// Just discard the ready\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ( data.action === 'loaded' ) {\n\t\t\t\t\t// Switch has finished; remove the abort timing so we stop discarding events.\n\t\t\t\t\tdelete timing.abort;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( trackdebug ) {\n\t\t\t\tlog( topic + '.' + data.action, duration + 'ms', data, schemaEditAttemptStep.defaults );\n\t\t\t} else {\n\t\t\t\tschemaEditAttemptStep.log( data, (\n\t\t\t\t\tmw.config.get( 'wgWMESchemaEditAttemptStepOversample' ) ||\n\t\t\t\t\tmw.config.get( 'wgMFSchemaEditAttemptStepOversample' ) === 'all' ||\n\t\t\t\t\t// wikitext / visualeditor\n\t\t\t\t\tdata.editor_interface === mw.config.get( 'wgMFSchemaEditAttemptStepOversample' )\n\t\t\t\t) ? 1 : sampleRate );\n\t\t\t}\n\t\t} );\n\n\t} );\n};\n"],"sourceRoot":""}