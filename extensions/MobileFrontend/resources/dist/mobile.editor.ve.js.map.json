{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.editor.ve/mobile.editor.ve.js","webpack://mfModules.[name]/./src/mobile.editor.ve/schemaVisualEditorFeatureUse.js"],"names":["schemaVisualEditorFeatureUse","require","ve","init","mw","MobileArticleTarget","static","parseSaveError","data","trackSubscribe","topic","track","extendObject","feature","split","editing_session_id","target","overlay","sessionId","module","exports","trackdebug","util","getParamValue","config","exists","loader","using","then","Schema","eventLog","sampleRate","get","event","action","editingSessionId","console","log","apply","arguments"],"mappings":"2LACA,IAAIA,EAA+BC,EAAS,0DAG5CC,GAAGC,KAAKC,GAAGC,oBAAoBC,OAAOC,eAAiB,SAAWC,GACjE,OAAOA,GAGRR,IAEAE,GAAGO,eAAgB,YAAa,SAAWC,EAAOF,GACjDJ,GAAGO,MAAO,kCAAmCT,GAAGU,aAAcJ,GAC7DK,QAASH,EAAMI,MAAO,KAAO,GAE7BC,mBAAoBb,GAAGC,KAAKa,OAAOC,QAAQC,uFCd7CC,EAAOC,QAAU,WAChB,IAAIC,IAAejB,GAAGkB,KAAKC,cAAe,cAEpCnB,GAAGoB,OAAOC,OAAQ,2CAQxBrB,GAAGsB,OAAOC,OAAS,qBAAuBC,KAAM,WAC/C,IACCC,EAASzB,GAAG0B,SAASD,OACrBE,EAAa3B,GAAGoB,OAAOQ,IAAK,0CAK5BhC,EAA+B,IAAI6B,EAClC,yBACAE,GAUF3B,GAAGK,eAAgB,kCAAmC,SAAWC,EAAOF,GACvE,IAAIyB,GACHpB,QAASL,EAAKK,QACdqB,OAAQ1B,EAAK0B,OACbC,iBAAkB3B,EAAKO,oBAGnBM,EAdN,WAICe,QAAQC,IAAIC,MAAOF,QAASG,WAW3BF,CAAK3B,EAAOuB,GAEZjC,EAA6BqC,IAAKJ,EACjC7B,GAAGoB,OAAOQ,IAAK,yCAC4C,iBAA3D5B,GAAGoB,OAAOQ,IAAK,wCAC4C,QAA3D5B,GAAGoB,OAAOQ,IAAK,uCACZ,EAAID","file":"mobile.editor.ve.js","sourcesContent":["/* global ve */\nvar schemaVisualEditorFeatureUse = require( './schemaVisualEditorFeatureUse' );\n\n// FIXME Remove this\nve.init.mw.MobileArticleTarget.static.parseSaveError = function ( data ) {\n\treturn data;\n};\n\nschemaVisualEditorFeatureUse();\n// Hook up activity-tracking from VE's system to mobilefrontend's system\nve.trackSubscribe( 'activity.', function ( topic, data ) {\n\tmw.track( 'mf.schemaVisualEditorFeatureUse', ve.extendObject( data, {\n\t\tfeature: topic.split( '.' )[ 1 ],\n\t\t// eslint-disable-next-line camelcase\n\t\tediting_session_id: ve.init.target.overlay.sessionId\n\t} ) );\n} );\n","module.exports = function () {\n\tvar trackdebug = !!mw.util.getParamValue( 'trackdebug' );\n\n\tif ( !mw.config.exists( 'wgWMESchemaEditAttemptStepSamplingRate' ) ) {\n\t\treturn;\n\t}\n\n\t// VisualEditorFeatureUse is intended to log whenever EditAttemptStep\n\t// does, so this file references its config for sampling rates and\n\t// oversampling.\n\n\tmw.loader.using( [ 'ext.eventLogging' ] ).then( function () {\n\t\tvar // Schema class provided by ext.eventLogging\n\t\t\tSchema = mw.eventLog.Schema,\n\t\t\tsampleRate = mw.config.get( 'wgWMESchemaEditAttemptStepSamplingRate' ),\n\t\t\t/**\n\t\t\t * Feature use schema\n\t\t\t * https://meta.wikimedia.org/wiki/Schema:VisualEditorFeatureUse\n\t\t\t */\n\t\t\tschemaVisualEditorFeatureUse = new Schema(\n\t\t\t\t'VisualEditorFeatureUse',\n\t\t\t\tsampleRate\n\t\t\t);\n\n\t\tfunction log() {\n\t\t\t// mw.log is a no-op unless resource loader is in debug mode, so\n\t\t\t// this allows trackdebug to work independently (T211698)\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log.apply( console, arguments );\n\t\t}\n\n\t\tmw.trackSubscribe( 'mf.schemaVisualEditorFeatureUse', function ( topic, data ) {\n\t\t\tvar event = {\n\t\t\t\tfeature: data.feature,\n\t\t\t\taction: data.action,\n\t\t\t\teditingSessionId: data.editing_session_id\n\t\t\t};\n\n\t\t\tif ( trackdebug ) {\n\t\t\t\tlog( topic, event );\n\t\t\t} else {\n\t\t\t\tschemaVisualEditorFeatureUse.log( event, (\n\t\t\t\t\tmw.config.get( 'wgWMESchemaEditAttemptStepOversample' ) ||\n\t\t\t\t\tmw.config.get( 'wgMFSchemaEditAttemptStepOversample' ) === 'visualeditor' ||\n\t\t\t\t\tmw.config.get( 'wgMFSchemaEditAttemptStepOversample' ) === 'all'\n\t\t\t\t) ? 1 : sampleRate );\n\t\t\t}\n\t\t} );\n\n\t} );\n};\n"],"sourceRoot":""}